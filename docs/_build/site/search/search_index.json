{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Functionality This chat bot supports some of the following. More functionality can be found in our wiki - Moderation - Games and leader-boards - LaTeX compilation Style Follow the PEP8 Standard and also the Google Python Standard for documentation. W503 (line length 80 chars) is ignored since some lines would look unintuitive when spread out.","title":"Home"},{"location":"#functionality","text":"This chat bot supports some of the following. More functionality can be found in our wiki - Moderation - Games and leader-boards - LaTeX compilation","title":"Functionality"},{"location":"#style","text":"Follow the PEP8 Standard and also the Google Python Standard for documentation. W503 (line length 80 chars) is ignored since some lines would look unintuitive when spread out.","title":"Style"},{"location":"setup/","text":"Setting up The following are the necessary dependencies for running this software. Operating System: APT/RPM based Linux distribution like Debian or Fedora Some functionality may still work on Windows and MacOS, but have not been fully tested. Use at your own discretion. If you're not running Linux natively then consider running this project in vagrant ; more info provided below. LaTeX: Requires the following to be installed, texlive and poppler-utils Calculator: Requires that gcalccmd is installed Python: Python 3.4+. No plans are made to make this support earlier versions. PIP . Package manager for python Guide: (optional) Setting up an environment separate from your host OS or global python interpreter to avoid dependency conflicts. If you're on Linux you might find setting up a virtualenv with the following virtualenv -p /usr/bin/python3 quadbot && source quadbot/bin/activate will be helpful. If you're on MacOS or Windows setting up vagrant will be useful. Then you can use vagrant init && vagrant ssh to load this project's production environment. Clone the git repo to your desired location Run git update-index --assume-unchanged plugins/SecretCommands.py to stop tracking SecretCommands.py Install pip dependencies manually with pip install -r requirements.txt , and install the aforementioned software manually. Or you run the install script using chmod +x install.sh && ./install.sh Follow the instructions in details-example.yaml to configure your bot for login Run using python3 app.py (optional) Test for errors you can run test.sh using chmod +x test.sh && ./test.sh License This project is distributed under the terms of the GPLv3 and MIT License . Credits Maintainer wgma00","title":"Setup"},{"location":"setup/#setting-up","text":"The following are the necessary dependencies for running this software.","title":"Setting up"},{"location":"setup/#operating-system","text":"APT/RPM based Linux distribution like Debian or Fedora Some functionality may still work on Windows and MacOS, but have not been fully tested. Use at your own discretion. If you're not running Linux natively then consider running this project in vagrant ; more info provided below.","title":"Operating System:"},{"location":"setup/#latex","text":"Requires the following to be installed, texlive and poppler-utils","title":"LaTeX:"},{"location":"setup/#calculator","text":"Requires that gcalccmd is installed","title":"Calculator:"},{"location":"setup/#python","text":"Python 3.4+. No plans are made to make this support earlier versions. PIP . Package manager for python","title":"Python:"},{"location":"setup/#guide","text":"(optional) Setting up an environment separate from your host OS or global python interpreter to avoid dependency conflicts. If you're on Linux you might find setting up a virtualenv with the following virtualenv -p /usr/bin/python3 quadbot && source quadbot/bin/activate will be helpful. If you're on MacOS or Windows setting up vagrant will be useful. Then you can use vagrant init && vagrant ssh to load this project's production environment. Clone the git repo to your desired location Run git update-index --assume-unchanged plugins/SecretCommands.py to stop tracking SecretCommands.py Install pip dependencies manually with pip install -r requirements.txt , and install the aforementioned software manually. Or you run the install script using chmod +x install.sh && ./install.sh Follow the instructions in details-example.yaml to configure your bot for login Run using python3 app.py (optional) Test for errors you can run test.sh using chmod +x test.sh && ./test.sh","title":"Guide:"},{"location":"setup/#license","text":"This project is distributed under the terms of the GPLv3 and MIT License .","title":"License"},{"location":"setup/#credits","text":"Maintainer wgma00","title":"Credits"},{"location":"showdown/","text":"Client Client(self, config=None, url=None, log_errors=False) Represents a client connection that connects to PokemonShowdown. This class handles the major client-side connection to the PokemonShowdown server. It also provides an API wrapper for the basic PS commands and protocols PS abides by. You should expect to be somewhat familiar with the PS protocols outlined below: https://github.com/Zarel/Pokemon-Showdown/blob/master/PROTOCOL.md if you want to make edits to the following piece of code. For the sake of simplicity, we assume that the command char used is ~ in the documentation. Attributes: ws: websockets connection, asyncio compliant websocket client. rooms: map of Room, map containing all of the rooms this bot is in. config: dict, contains all relevant config details for the bot. session: session, coroutine session required for aiohttp connections. log_errors: bool, whether or not to log exceptions.","title":"Development"},{"location":"plugins/CreditsCommand/","text":"Credits Credits(self) Usage: .credits - Returns a url to this page. test","title":"Credits"},{"location":"plugins/LatexCommand/","text":"Latex Latex(self) Handles LaTeX related commands. This class will take in commands of the form \".latex $equation$\". It will generate the corresponding LaTeX and upload it to the imgur image hosting. Usage: .latex $[command]$ - command: str, string with latex equation you would like to use. Attributes: _client_id: client object that interacts with the imgur host _client: client object that interacts with the imgur host packages: default packages which are run at start","title":"Latex"}]}